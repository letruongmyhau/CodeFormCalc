#if 0
* triangle.F
* form factors for {S[1, {i}]} -> {S[1, {j}], S[1, {k}]}
* generated by FormCalc 9.9 (7 Jun 2021) on 30-Jul-2021 8:37
#endif

#include "vars.h"
#include "inline.h"
#include "contains.h"


	subroutine triangle
	implicit none

#include "vars.h"
	ComplexType dup1, dup2

#include "inline.h"

	dup1 = ZH(i,1)*ZH(k,1) + ZH(i,2)*ZH(k,2)

	dup2 = ZH(j,1)*ZH(k,1) + ZH(j,2)*ZH(k,2)

	Cloop(1) = Cloop(1) + 
     &    1/Pi**2*(v1*(-(1/256.D0*
     &             (Finite*(8*g2**4 + Sub266**2)*
     &               (dup2*ZH(i,1) + dup1*ZH(j,1) + Sub273*ZH(k,1))
     &               )) + dup2*
     &           (1/16.D0*(g2**4*B0i22(Epsi(bb0))) + 
     &             1/128.D0*(Sub266**2*B0i23(Epsi(bb0))))*ZH(i,1) + 
     &          dup1*(1/16.D0*(g2**4*B0i20(Epsi(bb0))) + 
     &             1/128.D0*(Sub266**2*B0i21(Epsi(bb0))))*ZH(j,1)) + 
     &       (Sub273*v1*(1/128.D0*(Sub266**2*B0i17(Epsi(bb0))) + 
     &             1/16.D0*(g2**4*B0i5(Epsi(bb0)))) + 
     &          v1**3*(15/256.D0*(g2**6*C0i20(Epsi(cc0))) + 
     &             15/4096.D0*(Sub266**3*C0i21(Epsi(cc0))))*ZH(i,1)*
     &           ZH(j,1))*ZH(k,1))

#if DEBUG >= 4
	DEB("triangle:Cloop(1)", Cloop(1))
#endif

#include "contains.h"

	end

